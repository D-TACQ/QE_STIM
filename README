
Goal: stimulator simulates a shaft encoder

PULSES_PER_REV = 10k
MAX_REVS_SEC   = 100   # 6000 rpm, seems feasible
MAX PULSE_PER_SEC = 1M

We define a series of moves:


+10.000 revs
-5.5555 revs 

A move starts at zero revs and ends at zero revs
Shaft is assumed to accelerate to max speed
Acceleration: reaches 100 RPS in 1s (ie 100R/s2)

The system starts at START.
The INDEX pulse outputs every time the shaft passes START.
Fault pulses may be injected at any time

Move(startpos, revs)

s = ut + 1/2.aT12
s = vT2
s = v2 - 1/2.aT3a

s_accel - at

s_accel_max = 100

if S <= 100
   t = S/100   speedup: t/2, slowdown t/2
else
   tup = 1s (Sup=50)
   tdn = 1s (Sdn50
   tflat = (S-100)/100

call move1(tup)
call move2(tflat)
call move3(tdn)

Inside move: 
generate a set of data sampled at 1MSPS
in each 1msec slice, generate N pulses, keep tabs on the total so as to gen the Index

Fault is preprogrammed as a list of transition times, insert at the appropriate slice 


